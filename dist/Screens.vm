function Screens.drawStartScreen 3
push constant 64
push argument 3
sub
push constant 2
call Math.divide 2
pop local 0
push constant 64
push argument 4
sub
push constant 2
call Math.divide 2
pop local 1
push constant 64
push argument 5
sub
push constant 2
call Math.divide 2
pop local 2
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 8
push local 0
call Output.moveCursor 2
pop temp 0
push argument 0
call Output.printString 1
pop temp 0
push constant 10
push local 1
call Output.moveCursor 2
pop temp 0
push argument 1
call Output.printString 1
pop temp 0
push constant 12
push local 2
call Output.moveCursor 2
pop temp 0
push argument 2
call Output.printString 1
pop temp 0
push constant 0
push constant 5
push constant 3
call Assets.chicken 3
pop temp 0
push constant 0
return
function Screens.drawMessage 3
push constant 64
push argument 2
sub
push constant 2
call Math.divide 2
pop local 0
push constant 64
push argument 3
sub
push constant 2
call Math.divide 2
pop local 1
push constant 31
pop local 2
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 8
push local 0
call Output.moveCursor 2
pop temp 0
push argument 0
call Output.printString 1
pop temp 0
push constant 10
push local 1
call Output.moveCursor 2
pop temp 0
push argument 1
call Output.printString 1
pop temp 0
push constant 13
push local 2
call Output.moveCursor 2
pop temp 0
push argument 4
call Output.printInt 1
pop temp 0
push constant 0
return
function Screens.debug 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 1
push constant 50
call Output.moveCursor 2
pop temp 0
push constant 0
return
function Screens.debugInt 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 5
push constant 50
call Output.moveCursor 2
pop temp 0
push constant 0
return
function Screens.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
