function ChickenMazeGame.new 0
push constant 12
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 1
push constant 0
pop this 2
push constant 10
call String.new 1
push constant 71
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 84
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 68
call String.appendChar 2
push constant 89
call String.appendChar 2
push constant 33
call String.appendChar 2
pop this 4
push constant 5
call String.new 1
push constant 80
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 85
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 69
call String.appendChar 2
pop this 6
push constant 10
call String.new 1
push constant 71
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 77
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 86
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 33
call String.appendChar 2
pop this 5
push constant 12
call String.new 1
push constant 67
call String.appendChar 2
push constant 72
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 67
call String.appendChar 2
push constant 75
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 77
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 90
call String.appendChar 2
push constant 69
call String.appendChar 2
pop this 7
push constant 12
call String.new 1
push constant 80
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 75
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 89
call String.appendChar 2
push constant 33
call String.appendChar 2
pop this 8
push constant 9
call String.new 1
push constant 72
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 86
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 70
call String.appendChar 2
push constant 85
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 33
call String.appendChar 2
pop this 9
push constant 6
call String.new 1
push constant 76
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 58
call String.appendChar 2
pop this 10
push constant 6
call String.new 1
push constant 83
call String.appendChar 2
push constant 67
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 58
call String.appendChar 2
pop this 11
call Game.new 0
pop this 0
push pointer 0
return
function ChickenMazeGame.run 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call ChickenMazeGame.handleState 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push pointer 0
push local 0
call ChickenMazeGame.keyPressed 2
pop temp 0
push local 0
pop this 3
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 1
label IF_FALSE0
push constant 0
pop local 0
push constant 100
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function ChickenMazeGame.handleState 0
push argument 0
pop pointer 0
push this 0
call Game.getGameState 1
call Game.START 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 2
call Screen.clearScreen 0
pop temp 0
push this 7
push this 8
push this 9
push constant 12
push constant 12
push constant 8
call Screens.drawStartScreen 6
pop temp 0
label IF_FALSE1
label IF_FALSE0
push this 0
call Game.getGameState 1
call Game.PLAY 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call Game.draw 1
pop temp 0
label IF_FALSE2
push this 0
call Game.getGameState 1
call Game.PAUSE 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Game.doPause 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 3
push constant 5
call Output.moveCursor 2
pop temp 0
push this 6
call Output.printString 1
pop temp 0
label IF_FALSE3
push this 0
call Game.getGameState 1
call Game.NEWLEVEL 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
call Screen.clearScreen 0
pop temp 0
push this 4
push this 10
push constant 10
push constant 6
push this 0
call Game.getLevel 1
push constant 1
add
call Screens.drawMessage 5
pop temp 0
push constant 1000
call Sys.wait 1
pop temp 0
call Screen.clearScreen 0
pop temp 0
push this 0
call Game.PLAY 0
call Game.setGameState 2
pop temp 0
label IF_FALSE4
push this 0
call Game.getGameState 1
call Game.GAMEOVER 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
call Screen.clearScreen 0
pop temp 0
push this 5
push this 11
push constant 10
push constant 6
push this 0
call Game.getScore 1
call Screens.drawMessage 5
pop temp 0
push constant 1000
call Sys.wait 1
pop temp 0
push constant 0
pop this 2
push this 0
call Game.START 0
call Game.setGameState 2
pop temp 0
label IF_FALSE5
push constant 0
return
function ChickenMazeGame.keyPressed 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push local 0
not
push this 0
call Game.getGameState 1
call Game.START 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 0
push constant 0
pop this 2
push this 0
call Game.NEWLEVEL 0
call Game.setGameState 2
pop temp 0
label IF_FALSE0
push local 0
not
push this 0
call Game.getGameState 1
call Game.PLAY 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push argument 1
call Game.move 2
pop temp 0
push argument 1
push constant 80
eq
push this 3
push constant 80
eq
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call Game.PAUSE 0
call Game.setGameState 2
pop temp 0
push constant 0
not
pop local 0
label IF_FALSE2
label IF_FALSE1
push local 0
not
push this 0
call Game.getGameState 1
call Game.PAUSE 0
eq
and
push argument 1
push constant 80
eq
not
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Game.PLAY 0
call Game.setGameState 2
pop temp 0
label IF_FALSE3
push constant 0
return
function ChickenMazeGame.dispose 0
push argument 0
pop pointer 0
push this 0
call Game.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
