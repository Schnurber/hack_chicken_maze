function Maze.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 2
push this 2
call Assets.tileMap 1
pop this 0
push this 2
call Assets.tileGrain 1
pop this 1
push argument 0
pop this 2
push pointer 0
return
function Maze.draw 8
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
call Assets.MAZEWIDTH 0
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
call Assets.MAZEHEIGHT 0
lt
not
if-goto WHILE_END1
push constant 0
not
pop local 7
push argument 1
call Chicken.getXpos 1
push local 0
eq
push argument 1
call Chicken.getYpos 1
push local 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 7
label IF_FALSE0
push constant 0
pop local 4
label WHILE_EXP2
push local 4
push this 2
call Assets.enemyCount 1
lt
not
if-goto WHILE_END2
push local 4
push argument 2
add
pop pointer 1
push that 0
pop local 5
push local 5
call Enemy.getXpos 1
push local 0
eq
push local 5
call Enemy.getYpos 1
push local 1
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 7
label IF_FALSE1
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP2
label WHILE_END2
push local 0
push local 1
call Assets.MAZEWIDTH 0
call Math.multiply 2
add
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 0
push local 1
call Assets.MAZEWIDTH 0
call Math.multiply 2
add
push this 1
add
pop pointer 1
push that 0
pop local 3
push local 7
push local 3
push constant 1
neg
eq
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push local 0
push local 1
call Assets.tiles 3
pop temp 0
label IF_FALSE2
push local 3
push constant 1
neg
gt
push local 7
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 3
push local 0
push local 1
call Assets.grain 3
pop temp 0
label IF_FALSE3
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Maze.isObstacle 2
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 1
call Assets.MAZEWIDTH 0
push constant 1
sub
gt
or
push argument 2
push constant 0
lt
or
push argument 2
call Assets.MAZEHEIGHT 0
push constant 1
sub
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push argument 1
push argument 2
call Assets.MAZEWIDTH 0
call Math.multiply 2
add
pop local 1
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 3
gt
return
function Maze.isGrain 1
push argument 0
pop pointer 0
push argument 1
push argument 2
call Assets.MAZEWIDTH 0
call Math.multiply 2
add
pop local 0
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 1
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Maze.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push this 1
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
